name: Create TCP Outlet On SSH Server
inputs:
  ssh_host:
    description: "SSH Host"
    required: true
  ssh_user:
    description: "SSH User"
    required: true
  ssh_key_file_path:
    description: "SSH Key File Path"
    required: true
  email_addresses:
    description: "Email Addresses To Create TCP Inlet"
    required: true
  script_path:
    description: "Enrollment Script Path"
    required: false
    default: "./scripts"
  docker_image:
    description: "Docker Image With Tools For Enroll"
    default: "ghcr.io/build-trust/artifacts-helper:latest"


outputs:
  benchmark_results: 
    description: Benchmark Results
    value: ${{ steps.benchmark.outputs.BENCHMARK_OUTPUT }}

runs:
  using: "composite"
  steps:
    - shell: bash
      id: benchmark
      run: |
          set -ex

          chmod 600 ${{ inputs.ssh_key_file_path }}
          mkdir -p ~/.ssh
          
          known_host_path=$(echo ~/.ssh/known_hosts)
          touch "$known_host_path"

          ssh-keyscan ${{ inputs.ssh_host }} >> "$known_host_path" || true

          # Start Ockam portal for different plans
          emails="${{ inputs.email_addresses }}"
          emails=(${emails})

          benchmark_output=$(cat <<EOF
          \`Ockam Project Plans Benchmark Result\`
          ----------------------------------------
          EOF
          )

          for email in "${emails[@]}"; do
            PLAN="$(echo "$email" | sed 's/benchmark_\(.*\)@ockam.io/\1/i')"

            # Enroll
            ockam reset -y
            curl --proto '=https' --tlsv1.2 -sSfL https://raw.githubusercontent.com/build-trust/.github/refs/heads/custom-actions/actions/run_bats_test/enroll.sh | DOCKER_IMAGE_FOR_ENROLL="${{ inputs.docker_image }}" EMAIL_ADDRESS="$email" SCRIPT_PATH="${{ inputs.script_path }}"  bash

            ockam project ticket --usage-count 2 --attribute client > ticket
            until scp -o UserKnownHostsFile="$known_host_path" -i ${{ inputs.ssh_key_file_path }} ticket "${{ inputs.ssh_user }}@${{ inputs.ssh_host }}:ticket"; do sleep 10; done

            ssh -o UserKnownHostsFile="$known_host_path" -i ${{ inputs.ssh_key_file_path }} ${{ inputs.ssh_user }}@${{ inputs.ssh_host }}\
              'bash -s' << EOS
                set -ex
                export OCKAM_OPENTELEMETRY_EXPORT=false
                export OCKAM_LOG_LEVEL=error
                OCKAM_HOME="${PLAN}_enroll" ockam reset -y
                OCKAM_HOME="${PLAN}_enroll" ockam node create --enrollment-ticket ticket "
                  name: client
                  tcp-inlets:
                    echo_inlet:
                      from: 127.0.0.1:40001
                      allow: server
                      to: /project/default/service/forward_to_server-relay/secure/api/service/echo_outlet
                    null_outlet:
                      from: 127.0.0.1:50001
                      allow: server
                      to: /project/default/service/forward_to_server-relay/secure/api/service/null_outlet
                "

                # OCKAM_HOME="${PLAN}_enroll" ockam node create --quiet --enrollment-ticket ticket '{"tcp-inlet": {"from": "127.0.0.1:40001", "allow": "server", "to": "/project/default/service/forward_to_server-relay/secure/api/service/echo_outlet"}}'
                # OCKAM_HOME="${PLAN}_enroll" ockam node create --quiet --enrollment-ticket ticket '{"tcp-inlet": {"from": "127.0.0.1:50001", "allow": "server", "to": "/project/default/service/forward_to_server-relay/secure/api/service/null_outlet"}}'
                sleep 5
          EOS

            ssh -o UserKnownHostsFile="$known_host_path" -i ${{ inputs.ssh_key_file_path }} ${{ inputs.ssh_user }}@${{ inputs.ssh_host }} "tcp-test latency 127.0.0.1:40000"
            ssh -o UserKnownHostsFile="$known_host_path" -i ${{ inputs.ssh_key_file_path }} ${{ inputs.ssh_user }}@${{ inputs.ssh_host }} "tcp-test throughput --seconds 10 127.0.0.1:50000"

            throughput_result=$(ssh -o UserKnownHostsFile="$known_host_path" -i ${{ inputs.ssh_key_file_path }} ${{ inputs.ssh_user }}@${{ inputs.ssh_host }} "tcp-test throughput --seconds 10  127.0.0.1:50001")
            latency_result=$(ssh -o UserKnownHostsFile="$known_host_path" -i ${{ inputs.ssh_key_file_path }} ${{ inputs.ssh_user }}@${{ inputs.ssh_host }} "tcp-test latency 127.0.0.1:40001")
            ssh -o UserKnownHostsFile="$known_host_path" -i ${{ inputs.ssh_key_file_path }} ${{ inputs.ssh_user }}@${{ inputs.ssh_host }} "OCKAM_HOME=${PLAN}_enroll ockam reset -y"
            echo "$latency_result"
            echo "$throughput_result"

            id="$(echo "$email" | sed 's/benchmark_\(.*\)@ockam.io/\1/i')"

            benchmark_output=$(cat <<EOF
          ${benchmark_output}

          • Plan: \`$id\`
          \`\`\`
          • Latency
          $latency_result

          • Throughput
          $throughput_result
          \`\`\`
          EOF
          )
          done

          echo "Successfully tested all plans"
          echo $benchmark_output

          echo 'BENCHMARK_OUTPUT<<EOF' >> $GITHUB_OUTPUT
          echo "$benchmark_output" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT