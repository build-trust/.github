# This action checks if a path has been updated in the `Ockam` repository.
name: Unique Runner
description: Check if commit SHA to be run is unique
inputs:
  csv_filepath:
    description: "CSV file name"
    required: true
  path:
    description: "Path to compare git diff"
    required: true
outputs:
  commit_already_built:
    description: "Confirms if HEAD commit of Ockam repo has any unique change to build upon"
    value: ${{ steps.unique_result.outputs.commit_already_built }}
  commit_sha:
    description: "Commit SHA of the HEAD commit of any of the paths that has unique changes"
    value: ${{ steps.unique_result.outputs.commit_sha }}

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        # Check if action is a cron job
        sha=${{ github.event.inputs.commit_sha }}
        echo "COMMIT_ALREADY_BUILT=true" >> $GITHUB_ENV

        if [[ ! -z $sha ]]; then
          echo "A workflow dispatch was started"
          echo "COMMIT_ALREADY_BUILT=false" >> $GITHUB_ENV
          echo "COMMIT_SHA=$sha" >> $GITHUB_ENV
        fi

    - shell: bash
      working-directory: ockam
      if: env.COMMIT_ALREADY_BUILT == 'true'
      run: |
        set -x

        recently_built_commits=$(cat ${{ inputs.csv_filepath }})
        paths=( ${{ inputs.path }} )

        COMMIT_ALREADY_BUILT='false'

        for path in ${paths[@]}; do
          last_commit_for_path=$(head -1 <(git rev-list HEAD -- "$path"))
          echo "Last commit for path $path: $last_commit_for_path"
          COMMIT_SHA="$last_commit_for_path"

          if [[ "$recently_built_commits" =~ "$last_commit_for_path" ]]; then
            echo "Commit $last_commit_for_path has already been built."
            COMMIT_ALREADY_BUILT='true'
            break
          else
            echo "Commit $last_commit_for_path is unique for path $path."
          fi
        done

        echo "COMMIT_ALREADY_BUILT=$COMMIT_ALREADY_BUILT" >> $GITHUB_ENV
        echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV

    - shell: bash
      id: unique_result
      run: |
        echo "commit_already_built=${COMMIT_ALREADY_BUILT}" >> $GITHUB_OUTPUT
        echo "commit_sha=${COMMIT_SHA}" >> $GITHUB_OUTPUT
