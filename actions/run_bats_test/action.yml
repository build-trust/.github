name: Run Bats Test
description: Run Bats Test On CI

inputs:
  perform_ockam_enroll:
    description: "Perform Ockam Enroll"
    required: true
  script_path:
    description: "Enrollment Script Path"
    required: true
  ockam_repository_ref:
    description: "Ref From Which To Run Bats Test"
    required: false
  ockam_cli_repository_ref:
    description: "Ref From Which To Build Ockam Command"
    required: false
  controller_id:
    description: "Controller ID Of Ockam Command"
    required: false
  controller_addr:
    description: "Controller Address Of Ockam Command"
    required: false
  email_address:
    description: "Emaill Address To Run Ockam Enroll"
    required: false
    default: "test@ockam.io"
  build_ockam_binary:
    description: "Build Ockam Binary"
    required: true
    default: "true"
  bats_suites:
    description: "Bats suites to run"
    required: false
    default: "orchestrator_enroll orchestrator_enrolled orchestrator serial"
  ockam_identity:
    description: "Ockam Identity To Use For Enrollment"
    required: false

runs:
  using: "composite"

  steps:
    - uses: build-trust/.github/actions/run_bats_test/create_bats_test_env@metaclips_delete
      with:
        perform_ockam_enroll: ${{ inputs.perform_ockam_enroll }}
        ockam_repository_ref: ${{ inputs.ockam_repository_ref }}
        ockam_cli_repository_ref: ${{ inputs.ockam_cli_repository_ref }}
        controller_id: ${{ inputs.controller_id }}
        controller_addr: ${{ inputs.controller_addr }}
        build_ockam_binary: ${{ inputs.build_ockam_binary }}
        script_path: ${{ inputs.script_path }}
        email_address: ${{ inputs.email_address }}
        ockam_identity: ${{ inputs.ockam_identity }}

    - shell: nix --quiet develop ./tools/nix#rust --command bash {0}
      working-directory: ockam_bats
      run: |
        set -ex;
        ockam project list --output json
        ls -a /github/home
        nix --quiet develop --impure --expr 'let pkgs = import (builtins.getFlake "nixpkgs/nixos-23.11") {}; in pkgs.mkShell { buildInputs = with pkgs; [ postgresql python311Packages.psycopg2 python311Packages.selenium python311Packages.flask telegraf ]; }' --command sh -c 'ORCHESTRATOR_TESTS=1 OCKAM_DEFAULT_TIMEOUT=10m bash ./implementations/rust/ockam/ockam_command/tests/bats/run.sh ${{ inputs.bats_suites }}'

        echo "Bats passed...."

    - uses: build-trust/.github/actions/run_bats_test/delete_bats_test_env@custom-actions
      if: always()
      with:
        perform_ockam_enroll: ${{ inputs.perform_ockam_enroll }}
        ockam_repository_ref: ${{ inputs.ockam_repository_ref }}
        ockam_cli_repository_ref: ${{ inputs.ockam_cli_repository_ref }}
        controller_id: ${{ inputs.controller_id }}
        controller_addr: ${{ inputs.controller_addr }}
        build_ockam_binary: ${{ inputs.build_ockam_binary }}
        script_path: ${{ inputs.script_path }}
        email_address: ${{ inputs.email_address }}
